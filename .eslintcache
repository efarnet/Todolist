[{"C:\\Users\\Stagiaire\\todoolist\\src\\index.js":"1","C:\\Users\\Stagiaire\\todoolist\\src\\App.js":"2","C:\\Users\\Stagiaire\\todoolist\\src\\Form.js":"3","C:\\Users\\Stagiaire\\todoolist\\src\\TodoList.js":"4","C:\\Users\\Stagiaire\\todoolist\\src\\Todo.js":"5"},{"size":222,"mtime":1607511688011,"results":"6","hashOfConfig":"7"},{"size":1280,"mtime":1607613553595,"results":"8","hashOfConfig":"7"},{"size":1412,"mtime":1607610741306,"results":"9","hashOfConfig":"7"},{"size":811,"mtime":1607618182797,"results":"10","hashOfConfig":"7"},{"size":1010,"mtime":1607609644341,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1d6mj6c",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Stagiaire\\todoolist\\src\\index.js",[],["25","26"],"C:\\Users\\Stagiaire\\todoolist\\src\\App.js",["27"],"import React, {useState, useEffect} from 'react';\nimport Form from './Form';\nimport TodoList from'./TodoList';\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default function App() {\n\n  \n\n  const [element, setElement] = useState('');\n\n  const [elements, setElements] = useState([]);\n\n  const [status, setStatus] = useState('all');\n\n  const [filterTodos, setFilterTodos] = useState([]);\n\n  useEffect(()=> {\n    filterHandler();\n  }, [status, elements])\n\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilterTodos(elements.filter(item => item.completed === true));\n        break;\n\n      case 'uncompleted':\n        setFilterTodos(elements.filter(item => item.completed === false));\n        break;\n\n      default:\n        setFilterTodos(elements);\n        break;\n    }\n  }\n  \n\n  return (\n    <div className='App'>\n      <header>\n        <h1>Ma Todo List</h1>\n        </header>\n      <Form \n      element={element} \n      setElement={setElement} \n      setElements={setElements} \n      elements={elements}\n      setStatus={setStatus}\n      \n      />\n      <TodoList  \n      element={element} \n      setElements={setElements} \n      elements={elements}\n      filterTodos={filterTodos}  />\n\n      \n    </div>\n  )\n}\n\n\n","C:\\Users\\Stagiaire\\todoolist\\src\\Form.js",["28","29"],"import React, {useState} from 'react'\r\nimport TodoList from './TodoList'\r\n\r\nexport default function Form(props) {\r\n\r\nconst onChangeHandler =(e) => {\r\n\r\n    props.setElement(e.target.value);\r\n    \r\n\r\n}\r\n\r\nconst onClickHandler = (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    props.setElements([...props.elements, {\r\n            text: props.element,\r\n            id: Math.random() * 100,\r\n            completed: false\r\n    }]);\r\n    props.setElement('');\r\n   \r\n}\r\n\r\nconst statusHandler = (e) => {\r\n\r\n    props.setStatus(e.target.value)\r\n\r\n}\r\n   \r\n      return (   \r\n        \r\n    <form  >\r\n            <input  \r\n            type=\"text\" \r\n            className=\"todo-input\"\r\n            value={props.element}\r\n            onChange={onChangeHandler}\r\n            \r\n             />\r\n                <button \r\n                className=\"todo-button\" \r\n                type=\"submit\"\r\n                onClick={onClickHandler}\r\n                \r\n                >\r\n                    <i className=\"fas fa-plus-square\"></i>\r\n                </button>\r\n        <div className=\"select\">\r\n            <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                <option value=\"all\">All</option>\r\n                <option value=\"completed\">Completed</option>\r\n                <option value=\"uncompleted\">Uncompleted</option>\r\n            </select>\r\n    </div>\r\n    \r\n    \r\n  </form>\r\n\r\n  \r\n      );\r\n}\r\n","C:\\Users\\Stagiaire\\todoolist\\src\\TodoList.js",[],"C:\\Users\\Stagiaire\\todoolist\\src\\Todo.js",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":21,"column":6,"nodeType":"36","endLine":21,"endColumn":24,"suggestions":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":16,"nodeType":"40","messageId":"41","endLine":1,"endColumn":24},{"ruleId":"38","severity":1,"message":"42","line":2,"column":8,"nodeType":"40","messageId":"41","endLine":2,"endColumn":16},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterHandler'. Either include it or remove the dependency array.","ArrayExpression",["45"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'TodoList' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [status, elements, filterHandler]",{"range":"48","text":"49"},[459,477],"[status, elements, filterHandler]"]